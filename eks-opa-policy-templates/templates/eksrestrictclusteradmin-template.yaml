apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: eksadminaccess
  annotations:
    description: "Controls cluster-admin role assignments and system:masters group usage (CIS EKS 4.1.1, 4.1.7)"
    version: "1.0.0"

spec:
  crd:
    spec:
      names:
        kind: EksAdminAccess
      validation:
        openAPIV3Schema:
          properties:
            allowedRoles:
              type: array
              items:
                type: string
            excludedNamespaces:
              type: array
              items:
                type: string
            labelSelector:
              type: object
              properties:
                matchLabels:
                  type: object
                  additionalProperties:
                    type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package eksadminaccess

        violation[{"msg": msg}] {
          not excluded_namespace
          input.review.kind == "ClusterRoleBinding"
          input.review.object.roleRef.name == "cluster-admin"
          not allowed_role_binding(input.review.object)
          
          msg := sprintf("ClusterRoleBinding '%v' uses cluster-admin role which is restricted", [
            input.review.object.metadata.name
          ])
        }

        violation[{"msg": msg}] {
          not excluded_namespace
          input.review.kind == "RoleBinding"
          input.review.object.roleRef.name == "cluster-admin"
          not allowed_role_binding(input.review.object)
          
          msg := sprintf("RoleBinding '%v' uses cluster-admin role which is restricted", [
            input.review.object.metadata.name
          ])
        }

        violation[{"msg": msg}] {
          not excluded_namespace
          input.review.kind == "ClusterRoleBinding"
          subject := input.review.object.subjects[_]
          subject.kind == "Group"
          subject.name == "system:masters"
          
          msg := sprintf("ClusterRoleBinding '%v' uses restricted system:masters group", [
            input.review.object.metadata.name
          ])
        }

        allowed_role_binding(binding) {
          allowed := input.parameters.allowedRoles[_]
          binding.metadata.name == allowed
        }

        excluded_namespace {
          input.review.object.metadata.namespace == input.parameters.excludedNamespaces[_]
        }