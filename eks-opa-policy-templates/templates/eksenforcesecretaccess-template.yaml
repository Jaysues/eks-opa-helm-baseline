apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: eksenforcesecretaccess
  annotations:
    description: "Minimizes access to secrets in the Kubernetes cluster (CIS EKS 4.1.2)"
    version: "1.0.0"
spec:
  crd:
    spec:
      names:
        kind: EksEnforceSecretAccess
      validation:
        openAPIV3Schema:
          properties:
            excludedRoles:
              type: array
              items:
                type: string
            excludedNamespaces:
              type: array
              items:
                type: string
            labelSelector:
              type: object
              properties:
                matchLabels:
                  type: object
                  additionalProperties:
                    type: string
                matchExpressions:
                  type: array
                  items:
                    type: object
                    properties:
                      key:
                        type: string
                      operator:
                        type: string
                        enum: ["In", "NotIn", "Exists", "DoesNotExist"]
                      values:
                        type: array
                        items:
                          type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package eksenforcesecretaccess

        violation[{"msg": msg, "details": {}}] {
          not excluded_role
          not excluded_namespace
          
          # Check for rules that access secrets
          rule := input.review.object.rules[_]
          resource := rule.resources[_]
          resource == "secrets"
          
          # Check for sensitive verbs
          verb := rule.verbs[_]
          sensitive_verb := ["get", "list", "watch"][_]
          verb == sensitive_verb
          
          msg := sprintf("Role '%v' has sensitive access (%v) to secrets", [input.review.object.metadata.name, verb])
        }

        excluded_role {
          input.review.object.metadata.name == input.parameters.excludedRoles[_]
        }

        excluded_namespace {
          input.review.object.metadata.namespace == input.parameters.excludedNamespaces[_]
        } 