apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: ekspsphostfilesystem
  annotations:
    description: "Prevents containers from accessing the host filesystem (CIS EKS 4.5.2)"
    version: "1.0.0"
spec:
  crd:
    spec:
      names:
        kind: EksPspHostFilesystem
      validation:
        openAPIV3Schema:
          properties:
            allowedHostPaths:
              type: array
              items:
                type: object
                properties:
                  pathPrefix:
                    type: string
                  readOnly:
                    type: boolean
            excludedNamespaces:
              type: array
              items:
                type: string
            excludedImages:
              type: array
              items:
                type: string
            labelSelector:
              type: object
              properties:
                matchLabels:
                  type: object
                  additionalProperties:
                    type: string
                matchExpressions:
                  type: array
                  items:
                    type: object
                    properties:
                      key:
                        type: string
                      operator:
                        type: string
                        enum: ["In", "NotIn", "Exists", "DoesNotExist"]
                      values:
                        type: array
                        items:
                          type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package ekspsphostfilesystem

        is_excluded(container) {
            exclude_images := object.get(object.get(input, "parameters", {}), "excludedImages", [])
            img := container.image
            some exclusion
            exclusion = exclude_images[_]
            _matches_exclusion(img, exclusion)
        }

        _matches_exclusion(img, exclusion) {
            not endswith(exclusion, "*")
            exclusion == img
        }

        _matches_exclusion(img, exclusion) {
            endswith(exclusion, "*")
            prefix := trim_suffix(exclusion, "*")
            startswith(img, prefix)
        }

        violation[{"msg": msg, "details": {}}] {
          not excluded_namespace
          not is_excluded(input.review.object.spec)
          
          volume := input.review.object.spec.volumes[_]
          hostPath := volume.hostPath
          not allowed_host_path(hostPath.path)
          
          msg := sprintf("Pod '%v' has forbidden hostPath volume '%v': %v", [
            input.review.object.metadata.name,
            volume.name,
            hostPath.path
          ])
        }

        allowed_host_path(requestedPath) {
          allowedPath := input.parameters.allowedHostPaths[_]
          startswith(requestedPath, allowedPath.pathPrefix)
        }

        excluded_namespace {
          input.review.object.metadata.namespace == input.parameters.excludedNamespaces[_]
        }
