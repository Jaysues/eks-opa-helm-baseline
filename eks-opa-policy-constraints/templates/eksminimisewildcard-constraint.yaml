apiVersion: constraints.gatekeeper.sh/v1beta1
kind: EksMinimiseWildcard
metadata:
  name: block-wildcard-roles
  annotations:
    description: "Prevents use of wildcards in RBAC roles (CIS EKS 4.1.3)"
    version: "{{ .Values.constraints.eksminimisewildcard.version }}"
spec:
  enforcementAction: {{ .Values.constraints.enforcementAction | default "deny" }}
  match:
    kinds:
      - apiGroups: ["rbac.authorization.k8s.io"]
        kinds: ["Role", "ClusterRole"]
    {{- $baselineNamespaces := .Values.baselines.excludedNamespaces | default list }}
    {{- $customExemptions := .Values.constraints.eksminimisewildcard.exemptions | default dict }}
    {{- $customNamespaces := $customExemptions.excludedNamespaces | default list }}
    excludedNamespaces: {{ concat $baselineNamespaces $customNamespaces | toYaml | nindent 6 }}
    labelSelector:
      matchExpressions:
        - key: "exempted"
          operator: NotIn
          values:
            - "{{ .Values.constraints.eksminimisewildcard.exemptions.labelSelector.matchLabels.exempted | default "" }}"
  parameters:
    {{- $baselineAllowedRoles := .Values.baselines.whitelistedRoles | default list }}
    {{- $allowedRoles := $customExemptions.allowedRoles | default list }}
    allowedRoles: {{ concat $baselineAllowedRoles $allowedRoles | toYaml | nindent 6 }}
