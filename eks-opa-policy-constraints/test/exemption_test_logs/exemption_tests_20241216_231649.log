[0;32mStarting exemption tests...[0m
[1;33mCleaning up test resources...[0m

$ kubectl delete namespace exemption-test --ignore-not-found
namespace "exemption-test" deleted
[1;33mCreating test resources...[0m

Creating test namespace:
namespace/exemption-test created

Creating non-exempted test resources:
pod/capability-test-pod created
pod/image-test-pod created
pod/privilege-test-pod created
role.rbac.authorization.k8s.io/test-wildcard-role created

Creating exempted test resources:
pod/exempted-capability-pod created
pod/exempted-image-pod created
role.rbac.authorization.k8s.io/exempted-wildcard-role created

Waiting for Gatekeeper evaluation...

[1;33mVerifying exemptions...[0m

[0;32mChecking constraint violations:[0m

$ kubectl get constraints -n gatekeeper-system -o custom-columns=NAME:.metadata.name,VIOLATIONS:.status.totalViolations,ENFORCEMENT:.spec.enforcementAction
NAME                             VIOLATIONS   ENFORCEMENT
admin-access-control             0            dryrun
allowed-capabilities             6            dryrun
allowed-images                   32           dryrun
disallow-automount-api-token     25           dryrun
block-default-namespace          0            dryrun
disallow-privileged-containers   1            dryrun
enforce-probes                   0            dryrun
enforce-secret-access            66           dryrun
forbidden-sysctls                0            dryrun
limit-sensitive-verbs            4            dryrun
block-wildcard-roles             6            dryrun
eksmountedsecrets                6            dryrun
ensure-network-policy            9            dryrun
no-privilege-escalation          4            dryrun
psp-host-filesystem              15           dryrun
psp-host-namespace               15           dryrun
read-only-root-filesystem        8            dryrun
resource-limits                  31           dryrun
restrict-default-sa              0            dryrun

[0;32mChecking test resources:[0m

Pods in exemption-test namespace:

$ kubectl get pods -n exemption-test -o wide
NAME                      READY   STATUS    RESTARTS   AGE   IP           NODE           NOMINATED NODE   READINESS GATES
capability-test-pod       1/1     Running   0          12s   10.42.2.18   k3s-worker-0   <none>           <none>
exempted-capability-pod   1/1     Running   0          11s   10.42.2.21   k3s-worker-0   <none>           <none>
exempted-image-pod        1/1     Running   0          11s   10.42.2.22   k3s-worker-0   <none>           <none>
image-test-pod            1/1     Running   0          12s   10.42.2.19   k3s-worker-0   <none>           <none>
privilege-test-pod        1/1     Running   0          12s   10.42.2.20   k3s-worker-0   <none>           <none>

Roles in exemption-test namespace:

$ kubectl get roles -n exemption-test
NAME                     CREATED AT
exempted-wildcard-role   2024-12-16T12:17:02Z
test-wildcard-role       2024-12-16T12:17:01Z

[0;32mChecking specific violations:[0m

Non-exempted resources violations:

Violations for capability-test-pod:

$ kubectl describe capability-test-pod -n exemption-test | grep -A 5 'Events:'
error: the server doesn't have a resource type "capability-test-pod"

Violations for image-test-pod:

$ kubectl describe image-test-pod -n exemption-test | grep -A 5 'Events:'
error: the server doesn't have a resource type "image-test-pod"

Violations for privilege-test-pod:

$ kubectl describe privilege-test-pod -n exemption-test | grep -A 5 'Events:'
error: the server doesn't have a resource type "privilege-test-pod"

Violations for test-wildcard-role:

$ kubectl describe test-wildcard-role -n exemption-test | grep -A 5 'Events:'
error: the server doesn't have a resource type "test-wildcard-role"

Exempted resources violations:

Violations for exempted-capability-pod:

$ kubectl describe exempted-capability-pod -n exemption-test | grep -A 5 'Events:'
error: the server doesn't have a resource type "exempted-capability-pod"

Violations for exempted-image-pod:

$ kubectl describe exempted-image-pod -n exemption-test | grep -A 5 'Events:'
error: the server doesn't have a resource type "exempted-image-pod"

Violations for exempted-wildcard-role:

$ kubectl describe exempted-wildcard-role -n exemption-test | grep -A 5 'Events:'
error: the server doesn't have a resource type "exempted-wildcard-role"

Constraint audit results:

Audit for eksadminaccess.constraints.gatekeeper.sh/admin-access-control:

$ kubectl get eksadminaccess.constraints.gatekeeper.sh/admin-access-control -n gatekeeper-system -o jsonpath='{.status.violations}'

Audit for eksallowedcapabilities.constraints.gatekeeper.sh/allowed-capabilities:

$ kubectl get eksallowedcapabilities.constraints.gatekeeper.sh/allowed-capabilities -n gatekeeper-system -o jsonpath='{.status.violations}'
[{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container \u003cspeaker\u003e has disallowed capabilities. Allowed capabilities are []","name":"speaker-xq8fb","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container \u003cspeaker\u003e has disallowed capabilities. Allowed capabilities are []","name":"speaker-t44xg","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container \u003cspeaker\u003e has disallowed capabilities. Allowed capabilities are []","name":"speaker-s6wzs","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container \u003cspeaker\u003e has disallowed capabilities. Allowed capabilities are []","name":"speaker-f8wrb","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container \u003cspeaker\u003e has disallowed capabilities. Allowed capabilities are []","name":"speaker-5rqln","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container \u003ctest-container\u003e has disallowed capabilities. Allowed capabilities are []","name":"capability-test-pod","namespace":"exemption-test","version":"v1"}]
Audit for eksallowedimages.constraints.gatekeeper.sh/allowed-images:

$ kubectl get eksallowedimages.constraints.gatekeeper.sh/allowed-images -n gatekeeper-system -o jsonpath='{.status.violations}'
[{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Image quay.io/metallb/speaker:v0.14.8 comes from non-allowed registry","name":"speaker-xq8fb","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Image quay.io/metallb/speaker:v0.14.8 comes from non-allowed registry","name":"speaker-t44xg","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Image quay.io/metallb/speaker:v0.14.8 comes from non-allowed registry","name":"speaker-s6wzs","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Image quay.io/metallb/speaker:v0.14.8 comes from non-allowed registry","name":"speaker-f8wrb","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Image quay.io/metallb/speaker:v0.14.8 comes from non-allowed registry","name":"speaker-5rqln","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Image quay.io/metallb/controller:v0.14.8 comes from non-allowed registry","name":"controller-6dd967fdc7-f7tkz","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Image nginx:latest comes from non-allowed registry","name":"privilege-test-pod","namespace":"exemption-test","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Image docker.io/nginx:latest comes from non-allowed registry","name":"image-test-pod","namespace":"exemption-test","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Image nginx:latest comes from non-allowed registry","name":"capability-test-pod","namespace":"exemption-test","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Image quay.io/jetstack/cert-manager-webhook:v1.16.2 comes from non-allowed registry","name":"cert-manager-webhook-b8cdf84f-l9hn6","namespace":"cert-manager","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Image quay.io/jetstack/cert-manager-cainjector:v1.16.2 comes from non-allowed registry","name":"cert-manager-cainjector-6687cc685b-h56lq","namespace":"cert-manager","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Image quay.io/jetstack/cert-manager-controller:v1.16.2 comes from non-allowed registry","name":"cert-manager-974688dfd-s46l4","namespace":"cert-manager","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Image quay.io/argoproj/argocd:v2.13.2 comes from non-allowed registry","name":"argocd-server-6b4bf5c579-86q85","namespace":"argocd","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Image quay.io/argoproj/argocd:v2.13.2 comes from non-allowed registry","name":"argocd-repo-server-96fc4895b-5gq5n","namespace":"argocd","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Image public.ecr.aws/docker/library/redis:7.4.1-alpine comes from non-allowed registry","name":"argocd-redis-5c67786686-sg4wg","namespace":"argocd","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Image quay.io/argoproj/argocd:v2.13.2 comes from non-allowed registry","name":"argocd-notifications-controller-764b9d6597-x4mwb","namespace":"argocd","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Image quay.io/argoproj/argocd:v2.13.2 comes from non-allowed registry","name":"argocd-dex-server-7999ccc6f8-hn24l","namespace":"argocd","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Image ghcr.io/dexidp/dex:v2.41.1 comes from non-allowed registry","name":"argocd-dex-server-7999ccc6f8-hn24l","namespace":"argocd","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Image quay.io/argoproj/argocd:v2.13.2 comes from non-allowed registry","name":"argocd-applicationset-controller-5cd9fdc649-cnzn2","namespace":"argocd","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Image quay.io/argoproj/argocd:v2.13.2 comes from non-allowed registry","name":"argocd-application-controller-0","namespace":"argocd","version":"v1"}]
Audit for eksblockautomounttoken.constraints.gatekeeper.sh/disallow-automount-api-token:

$ kubectl get eksblockautomounttoken.constraints.gatekeeper.sh/disallow-automount-api-token -n gatekeeper-system -o jsonpath='{.status.violations}'
[{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Automounting service account token is disallowed, pod: grafana-5b9b7bc6df-ggwt7","name":"grafana-5b9b7bc6df-ggwt7","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Automounting service account token is disallowed, pod: speaker-xq8fb","name":"speaker-xq8fb","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Automounting service account token is disallowed, pod: speaker-t44xg","name":"speaker-t44xg","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Automounting service account token is disallowed, pod: speaker-s6wzs","name":"speaker-s6wzs","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Automounting service account token is disallowed, pod: speaker-f8wrb","name":"speaker-f8wrb","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Automounting service account token is disallowed, pod: speaker-5rqln","name":"speaker-5rqln","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Automounting service account token is disallowed, pod: controller-6dd967fdc7-f7tkz","name":"controller-6dd967fdc7-f7tkz","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Automounting service account token is disallowed, pod: privilege-test-pod","name":"privilege-test-pod","namespace":"exemption-test","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Automounting service account token is disallowed, pod: image-test-pod","name":"image-test-pod","namespace":"exemption-test","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Automounting service account token is disallowed, pod: capability-test-pod","name":"capability-test-pod","namespace":"exemption-test","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Automounting service account token is disallowed, pod: cert-manager-webhook-b8cdf84f-l9hn6","name":"cert-manager-webhook-b8cdf84f-l9hn6","namespace":"cert-manager","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Automounting service account token is disallowed, pod: cert-manager-cainjector-6687cc685b-h56lq","name":"cert-manager-cainjector-6687cc685b-h56lq","namespace":"cert-manager","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Automounting service account token is disallowed, pod: cert-manager-974688dfd-s46l4","name":"cert-manager-974688dfd-s46l4","namespace":"cert-manager","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Automounting service account token is disallowed, pod: argocd-server-6b4bf5c579-86q85","name":"argocd-server-6b4bf5c579-86q85","namespace":"argocd","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Automounting service account token is disallowed, pod: argocd-repo-server-96fc4895b-5gq5n","name":"argocd-repo-server-96fc4895b-5gq5n","namespace":"argocd","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Automounting service account token is disallowed, pod: argocd-redis-5c67786686-sg4wg","name":"argocd-redis-5c67786686-sg4wg","namespace":"argocd","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Automounting service account token is disallowed, pod: argocd-notifications-controller-764b9d6597-x4mwb","name":"argocd-notifications-controller-764b9d6597-x4mwb","namespace":"argocd","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Automounting service account token is disallowed, pod: argocd-dex-server-7999ccc6f8-hn24l","name":"argocd-dex-server-7999ccc6f8-hn24l","namespace":"argocd","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Automounting service account token is disallowed, pod: argocd-applicationset-controller-5cd9fdc649-cnzn2","name":"argocd-applicationset-controller-5cd9fdc649-cnzn2","namespace":"argocd","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Automounting service account token is disallowed, pod: argocd-application-controller-0","name":"argocd-application-controller-0","namespace":"argocd","version":"v1"}]
Audit for eksblockdefaultnamespace.constraints.gatekeeper.sh/block-default-namespace:

$ kubectl get eksblockdefaultnamespace.constraints.gatekeeper.sh/block-default-namespace -n gatekeeper-system -o jsonpath='{.status.violations}'

Audit for ekscontainernoprivilege.constraints.gatekeeper.sh/disallow-privileged-containers:

$ kubectl get ekscontainernoprivilege.constraints.gatekeeper.sh/disallow-privileged-containers -n gatekeeper-system -o jsonpath='{.status.violations}'
[{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Privileged container is not allowed: privileged-container, securityContext: {\"privileged\": true}","name":"privilege-test-pod","namespace":"exemption-test","version":"v1"}]
Audit for eksenforceprobes.constraints.gatekeeper.sh/enforce-probes:

$ kubectl get eksenforceprobes.constraints.gatekeeper.sh/enforce-probes -n gatekeeper-system -o jsonpath='{.status.violations}'

Audit for eksenforcesecretaccess.constraints.gatekeeper.sh/enforce-secret-access:

$ kubectl get eksenforcesecretaccess.constraints.gatekeeper.sh/enforce-secret-access -n gatekeeper-system -o jsonpath='{.status.violations}'
[{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"Role 'cert-manager-controller-issuers' has sensitive access (list) to secrets","name":"cert-manager-controller-issuers","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"Role 'cert-manager-controller-issuers' has sensitive access (get) to secrets","name":"cert-manager-controller-issuers","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"Role 'cert-manager-controller-clusterissuers' has sensitive access (watch) to secrets","name":"cert-manager-controller-clusterissuers","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"Role 'cert-manager-controller-clusterissuers' has sensitive access (list) to secrets","name":"cert-manager-controller-clusterissuers","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"Role 'cert-manager-controller-clusterissuers' has sensitive access (get) to secrets","name":"cert-manager-controller-clusterissuers","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"Role 'cert-manager-controller-challenges' has sensitive access (watch) to secrets","name":"cert-manager-controller-challenges","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"Role 'cert-manager-controller-challenges' has sensitive access (list) to secrets","name":"cert-manager-controller-challenges","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"Role 'cert-manager-controller-challenges' has sensitive access (get) to secrets","name":"cert-manager-controller-challenges","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"Role 'cert-manager-controller-certificates' has sensitive access (watch) to secrets","name":"cert-manager-controller-certificates","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"Role 'cert-manager-controller-certificates' has sensitive access (list) to secrets","name":"cert-manager-controller-certificates","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"Role 'cert-manager-controller-certificates' has sensitive access (get) to secrets","name":"cert-manager-controller-certificates","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"Role 'cert-manager-cainjector' has sensitive access (watch) to secrets","name":"cert-manager-cainjector","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"Role 'cert-manager-cainjector' has sensitive access (list) to secrets","name":"cert-manager-cainjector","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"Role 'cert-manager-cainjector' has sensitive access (get) to secrets","name":"cert-manager-cainjector","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"Role 'argocd-notifications-controller' has sensitive access (watch) to secrets","name":"argocd-notifications-controller","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"Role 'argocd-notifications-controller' has sensitive access (list) to secrets","name":"argocd-notifications-controller","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"Role 'argocd-notifications-controller' has sensitive access (get) to secrets","name":"argocd-notifications-controller","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"Role 'admin' has sensitive access (watch) to secrets","name":"admin","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"Role 'admin' has sensitive access (list) to secrets","name":"admin","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"Role 'admin' has sensitive access (get) to secrets","name":"admin","version":"v1"}]
Audit for eksforbiddensysctl.constraints.gatekeeper.sh/forbidden-sysctls:

$ kubectl get eksforbiddensysctl.constraints.gatekeeper.sh/forbidden-sysctls -n gatekeeper-system -o jsonpath='{.status.violations}'

Audit for ekslimitsensitiveverbs.constraints.gatekeeper.sh/limit-sensitive-verbs:

$ kubectl get ekslimitsensitiveverbs.constraints.gatekeeper.sh/limit-sensitive-verbs -n gatekeeper-system -o jsonpath='{.status.violations}'
[{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"Role 'system:controller:clusterrole-aggregation-controller' contains sensitive verb 'escalate' which allows privilege escalation","name":"system:controller:clusterrole-aggregation-controller","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"Role 'system:aggregate-to-edit' contains sensitive verb 'impersonate' which allows privilege escalation","name":"system:aggregate-to-edit","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"Role 'edit' contains sensitive verb 'impersonate' which allows privilege escalation","name":"edit","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"Role 'admin' contains sensitive verb 'impersonate' which allows privilege escalation","name":"admin","version":"v1"}]
Audit for eksminimisewildcard.constraints.gatekeeper.sh/block-wildcard-roles:

$ kubectl get eksminimisewildcard.constraints.gatekeeper.sh/block-wildcard-roles -n gatekeeper-system -o jsonpath='{.status.violations}'
[{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"Role","message":"Role test-wildcard-role should not use wildcard '*'","name":"test-wildcard-role","namespace":"exemption-test","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"ClusterRole metallb-system:speaker should not use wildcard '*'","name":"metallb-system:speaker","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"ClusterRole local-path-provisioner-role should not use wildcard '*'","name":"local-path-provisioner-role","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"ClusterRole k3s-cloud-controller-manager should not use wildcard '*'","name":"k3s-cloud-controller-manager","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"ClusterRole argocd-server should not use wildcard '*'","name":"argocd-server","version":"v1"},{"enforcementAction":"dryrun","group":"rbac.authorization.k8s.io","kind":"ClusterRole","message":"ClusterRole argocd-application-controller should not use wildcard '*'","name":"argocd-application-controller","version":"v1"}]
Audit for eksmountedsecrets.constraints.gatekeeper.sh/eksmountedsecrets:

$ kubectl get eksmountedsecrets.constraints.gatekeeper.sh/eksmountedsecrets -n gatekeeper-system -o jsonpath='{.status.violations}'
[{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'traefik' in pod 'traefik-5c9b4bd4cd-s6mr9' uses non-exempted secret 'cloudflare-api-token-secret' as environment variable. Use secret volumes instead.","name":"traefik-5c9b4bd4cd-s6mr9","namespace":"traefik","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'grafana' in pod 'grafana-5b9b7bc6df-ggwt7' uses non-exempted secret 'grafana' as environment variable. Use secret volumes instead.","name":"grafana-5b9b7bc6df-ggwt7","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'server' in pod 'argocd-server-6b4bf5c579-86q85' uses non-exempted secret 'argocd-redis' as environment variable. Use secret volumes instead.","name":"argocd-server-6b4bf5c579-86q85","namespace":"argocd","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'repo-server' in pod 'argocd-repo-server-96fc4895b-5gq5n' uses non-exempted secret 'argocd-redis' as environment variable. Use secret volumes instead.","name":"argocd-repo-server-96fc4895b-5gq5n","namespace":"argocd","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'redis' in pod 'argocd-redis-5c67786686-sg4wg' uses non-exempted secret 'argocd-redis' as environment variable. Use secret volumes instead.","name":"argocd-redis-5c67786686-sg4wg","namespace":"argocd","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'application-controller' in pod 'argocd-application-controller-0' uses non-exempted secret 'argocd-redis' as environment variable. Use secret volumes instead.","name":"argocd-application-controller-0","namespace":"argocd","version":"v1"}]
Audit for eksnetworkpolicyexists.constraints.gatekeeper.sh/ensure-network-policy:

$ kubectl get eksnetworkpolicyexists.constraints.gatekeeper.sh/ensure-network-policy -n gatekeeper-system -o jsonpath='{.status.violations}'
[{"enforcementAction":"dryrun","group":"","kind":"Namespace","message":"Namespace 'traefik' does not have a NetworkPolicy defined","name":"traefik","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Namespace","message":"Namespace 'monitoring' does not have a NetworkPolicy defined","name":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Namespace","message":"Namespace 'metallb-system' does not have a NetworkPolicy defined","name":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Namespace","message":"Namespace 'kube-public' does not have a NetworkPolicy defined","name":"kube-public","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Namespace","message":"Namespace 'kube-node-lease' does not have a NetworkPolicy defined","name":"kube-node-lease","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Namespace","message":"Namespace 'exemption-test' does not have a NetworkPolicy defined","name":"exemption-test","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Namespace","message":"Namespace 'default' does not have a NetworkPolicy defined","name":"default","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Namespace","message":"Namespace 'cert-manager' does not have a NetworkPolicy defined","name":"cert-manager","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Namespace","message":"Namespace 'argocd' does not have a NetworkPolicy defined","name":"argocd","version":"v1"}]
Audit for eksnoprivilegeescalation.constraints.gatekeeper.sh/no-privilege-escalation:

$ kubectl get eksnoprivilegeescalation.constraints.gatekeeper.sh/no-privilege-escalation -n gatekeeper-system -o jsonpath='{.status.violations}'
[{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Privilege escalation container is not allowed: prometheus-server-configmap-reload","name":"prometheus-server-585d68b98b-lnhql","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Privilege escalation container is not allowed: prometheus-server","name":"prometheus-server-585d68b98b-lnhql","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Privilege escalation container is not allowed: pushgateway","name":"prometheus-prometheus-pushgateway-85b7d9fbfc-vzcb8","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Privilege escalation container is not allowed: alertmanager","name":"prometheus-alertmanager-0","namespace":"monitoring","version":"v1"}]
Audit for ekspsphostfilesystem.constraints.gatekeeper.sh/psp-host-filesystem:

$ kubectl get ekspsphostfilesystem.constraints.gatekeeper.sh/psp-host-filesystem -n gatekeeper-system -o jsonpath='{.status.violations}'
[{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-lwkgb' has forbidden hostPath volume 'sys': /sys","name":"prometheus-prometheus-node-exporter-lwkgb","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-lwkgb' has forbidden hostPath volume 'root': /","name":"prometheus-prometheus-node-exporter-lwkgb","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-lwkgb' has forbidden hostPath volume 'proc': /proc","name":"prometheus-prometheus-node-exporter-lwkgb","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-fjwhx' has forbidden hostPath volume 'sys': /sys","name":"prometheus-prometheus-node-exporter-fjwhx","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-fjwhx' has forbidden hostPath volume 'root': /","name":"prometheus-prometheus-node-exporter-fjwhx","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-fjwhx' has forbidden hostPath volume 'proc': /proc","name":"prometheus-prometheus-node-exporter-fjwhx","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-f8j2w' has forbidden hostPath volume 'sys': /sys","name":"prometheus-prometheus-node-exporter-f8j2w","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-f8j2w' has forbidden hostPath volume 'root': /","name":"prometheus-prometheus-node-exporter-f8j2w","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-f8j2w' has forbidden hostPath volume 'proc': /proc","name":"prometheus-prometheus-node-exporter-f8j2w","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-57qt9' has forbidden hostPath volume 'sys': /sys","name":"prometheus-prometheus-node-exporter-57qt9","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-57qt9' has forbidden hostPath volume 'root': /","name":"prometheus-prometheus-node-exporter-57qt9","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-57qt9' has forbidden hostPath volume 'proc': /proc","name":"prometheus-prometheus-node-exporter-57qt9","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-2xjqg' has forbidden hostPath volume 'sys': /sys","name":"prometheus-prometheus-node-exporter-2xjqg","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-2xjqg' has forbidden hostPath volume 'root': /","name":"prometheus-prometheus-node-exporter-2xjqg","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-2xjqg' has forbidden hostPath volume 'proc': /proc","name":"prometheus-prometheus-node-exporter-2xjqg","namespace":"monitoring","version":"v1"}]
Audit for ekspsphostnamespace.constraints.gatekeeper.sh/psp-host-namespace:

$ kubectl get ekspsphostnamespace.constraints.gatekeeper.sh/psp-host-namespace -n gatekeeper-system -o jsonpath='{.status.violations}'
[{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-lwkgb' is not allowed to share the host network namespace","name":"prometheus-prometheus-node-exporter-lwkgb","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-lwkgb' is not allowed to share the host PID namespace","name":"prometheus-prometheus-node-exporter-lwkgb","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-fjwhx' is not allowed to share the host network namespace","name":"prometheus-prometheus-node-exporter-fjwhx","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-fjwhx' is not allowed to share the host PID namespace","name":"prometheus-prometheus-node-exporter-fjwhx","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-f8j2w' is not allowed to share the host network namespace","name":"prometheus-prometheus-node-exporter-f8j2w","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-f8j2w' is not allowed to share the host PID namespace","name":"prometheus-prometheus-node-exporter-f8j2w","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-57qt9' is not allowed to share the host network namespace","name":"prometheus-prometheus-node-exporter-57qt9","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-57qt9' is not allowed to share the host PID namespace","name":"prometheus-prometheus-node-exporter-57qt9","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-2xjqg' is not allowed to share the host network namespace","name":"prometheus-prometheus-node-exporter-2xjqg","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'prometheus-prometheus-node-exporter-2xjqg' is not allowed to share the host PID namespace","name":"prometheus-prometheus-node-exporter-2xjqg","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'speaker-xq8fb' is not allowed to share the host network namespace","name":"speaker-xq8fb","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'speaker-t44xg' is not allowed to share the host network namespace","name":"speaker-t44xg","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'speaker-s6wzs' is not allowed to share the host network namespace","name":"speaker-s6wzs","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'speaker-f8wrb' is not allowed to share the host network namespace","name":"speaker-f8wrb","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Pod 'speaker-5rqln' is not allowed to share the host network namespace","name":"speaker-5rqln","namespace":"metallb-system","version":"v1"}]
Audit for eksreadonlyfilesystem.constraints.gatekeeper.sh/read-only-root-filesystem:

$ kubectl get eksreadonlyfilesystem.constraints.gatekeeper.sh/read-only-root-filesystem -n gatekeeper-system -o jsonpath='{.status.violations}'
[{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Readonly root filesystem is required for container. pod:'prometheus-server-585d68b98b-lnhql', container:'prometheus-server-configmap-reload'","name":"prometheus-server-585d68b98b-lnhql","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Readonly root filesystem is required for container. pod:'prometheus-server-585d68b98b-lnhql', container:'prometheus-server'","name":"prometheus-server-585d68b98b-lnhql","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Readonly root filesystem is required for container. pod:'prometheus-prometheus-pushgateway-85b7d9fbfc-vzcb8', container:'pushgateway'","name":"prometheus-prometheus-pushgateway-85b7d9fbfc-vzcb8","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Readonly root filesystem is required for container. pod:'prometheus-alertmanager-0', container:'alertmanager'","name":"prometheus-alertmanager-0","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Readonly root filesystem is required for container. pod:'grafana-5b9b7bc6df-ggwt7', container:'grafana'","name":"grafana-5b9b7bc6df-ggwt7","namespace":"monitoring","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Readonly root filesystem is required for container. pod:'privilege-test-pod', container:'privileged-container'","name":"privilege-test-pod","namespace":"exemption-test","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Readonly root filesystem is required for container. pod:'image-test-pod', container:'test-container'","name":"image-test-pod","namespace":"exemption-test","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Readonly root filesystem is required for container. pod:'capability-test-pod', container:'test-container'","name":"capability-test-pod","namespace":"exemption-test","version":"v1"}]
Audit for eksresourcelimits.constraints.gatekeeper.sh/resource-limits:

$ kubectl get eksresourcelimits.constraints.gatekeeper.sh/resource-limits -n gatekeeper-system -o jsonpath='{.status.violations}'
[{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'speaker' in pod 'speaker-t44xg' must specify resource limits","name":"speaker-t44xg","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'speaker' in pod 'speaker-s6wzs' must specify resource limits","name":"speaker-s6wzs","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'speaker' in pod 'speaker-f8wrb' must specify resource limits","name":"speaker-f8wrb","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'speaker' in pod 'speaker-5rqln' must specify resource limits","name":"speaker-5rqln","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'controller' in pod 'controller-6dd967fdc7-f7tkz' must specify resource limits","name":"controller-6dd967fdc7-f7tkz","namespace":"metallb-system","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'privileged-container' in pod 'privilege-test-pod' must specify resource limits","name":"privilege-test-pod","namespace":"exemption-test","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'test-container' in pod 'image-test-pod' must specify resource limits","name":"image-test-pod","namespace":"exemption-test","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'test-container' in pod 'capability-test-pod' must specify resource limits","name":"capability-test-pod","namespace":"exemption-test","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'cert-manager-webhook' in pod 'cert-manager-webhook-b8cdf84f-l9hn6' must specify resource limits","name":"cert-manager-webhook-b8cdf84f-l9hn6","namespace":"cert-manager","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'cert-manager-cainjector' in pod 'cert-manager-cainjector-6687cc685b-h56lq' must specify resource limits","name":"cert-manager-cainjector-6687cc685b-h56lq","namespace":"cert-manager","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'cert-manager-controller' in pod 'cert-manager-974688dfd-s46l4' must specify resource limits","name":"cert-manager-974688dfd-s46l4","namespace":"cert-manager","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'server' in pod 'argocd-server-6b4bf5c579-86q85' must specify resource limits","name":"argocd-server-6b4bf5c579-86q85","namespace":"argocd","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'repo-server' in pod 'argocd-repo-server-96fc4895b-5gq5n' must specify resource limits","name":"argocd-repo-server-96fc4895b-5gq5n","namespace":"argocd","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'copyutil' in pod 'argocd-repo-server-96fc4895b-5gq5n' must specify resource limits","name":"argocd-repo-server-96fc4895b-5gq5n","namespace":"argocd","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'redis' in pod 'argocd-redis-5c67786686-sg4wg' must specify resource limits","name":"argocd-redis-5c67786686-sg4wg","namespace":"argocd","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'notifications-controller' in pod 'argocd-notifications-controller-764b9d6597-x4mwb' must specify resource limits","name":"argocd-notifications-controller-764b9d6597-x4mwb","namespace":"argocd","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'dex-server' in pod 'argocd-dex-server-7999ccc6f8-hn24l' must specify resource limits","name":"argocd-dex-server-7999ccc6f8-hn24l","namespace":"argocd","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'copyutil' in pod 'argocd-dex-server-7999ccc6f8-hn24l' must specify resource limits","name":"argocd-dex-server-7999ccc6f8-hn24l","namespace":"argocd","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'applicationset-controller' in pod 'argocd-applicationset-controller-5cd9fdc649-cnzn2' must specify resource limits","name":"argocd-applicationset-controller-5cd9fdc649-cnzn2","namespace":"argocd","version":"v1"},{"enforcementAction":"dryrun","group":"","kind":"Pod","message":"Container 'application-controller' in pod 'argocd-application-controller-0' must specify resource limits","name":"argocd-application-controller-0","namespace":"argocd","version":"v1"}]
Audit for eksrestrictdefaultsa.constraints.gatekeeper.sh/restrict-default-sa:

$ kubectl get eksrestrictdefaultsa.constraints.gatekeeper.sh/restrict-default-sa -n gatekeeper-system -o jsonpath='{.status.violations}'
[0;32mTests completed. Results saved to: exemption_test_logs/exemption_tests_20241216_231649.log[0m
