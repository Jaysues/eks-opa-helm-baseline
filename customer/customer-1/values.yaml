# customer/customer-1/values.yaml

constraints:
  enforcementAction: "deny"

eksallowedcapabilitieseffect:
  cisBenchmark: "5.2.8, 5.2.9"
  title: "Restrict Container Capabilities"
  type: "container"
  enforces:
  - "Restrict capabilities to reduce container attack surface"
  - "Prevent elevation of privileges"
  remediation:
  - "Review capabilities added to containers"
  - "Drop unneeded capabilities using 'requiredDropCapabilities'"
  - "Follow exemption process if capabilities are required"
  implementation:
  - "Check 'allowedCapabilities' and 'requiredDropCapabilities' in container specs"
  - "Validate capabilities for all containers and initContainers"
  exemptions:
    excludedContainers: []
    excludedImages: []
  labelSelector:
    matchLabels: {}
  allowedCapabilities: []
  requiredDropCapabilities: []

eksallowedimageseffect:
  cisBenchmark: "5.1.4"
  title: "Ensure Image Provenance"
  type: "container"
  enforces:
  - "Use of approved container registries only"
  - "Prevention of untrusted image sources"
  remediation:
  - "Review image registry being used"
  - "Switch to an approved registry"
  implementation:
  - "Validate container images match approved registries"
  - "Check both regular and init containers"
  exemptions:
    excludedNamespaces: []
  labelSelector:
    matchLabels: {}
  allowedRegistries: []

eksnoprivilegeescalationeffect:
  cisBenchmark: "5.2.5"
  title: "Prevent Privilege Escalation"
  type: "container"
  enforces:
  - "Disallow privilege escalation in containers"
  remediation:
  - "Set 'allowPrivilegeEscalation' to false"
  - "Avoid running containers as root user"
  implementation:
  - "Check securityContext.allowPrivilegeEscalation"
  - "Ensure securityContext.runAsUser is non-root"
  exemptions:
    excludedNamespaces: []
    excludedContainers: []
    excludedImages: []
  labelSelector:
    matchLabels: {}

eksenforceprobeseffect:
  cisBenchmark: "5.2.7"
  title: "Ensure Probes Are Configured"
  type: "container"
  enforces:
  - "Liveness and readiness probes must be configured"
  remediation:
  - "Define liveness and readiness probes for all containers"
  - "Use 'httpGet', 'tcpSocket', or 'exec' probes"
  implementation:
  - "Validate 'livenessProbe' and 'readinessProbe' fields in container specs"
  exemptions:
    excludedNamespaces: []
    excludedContainers: []
    excludedImages: []
  labelSelector:
    matchLabels: {}
  enforceProbes: []

eksblockwildcardroleseffect:
  cisBenchmark: "5.1.2"
  title: "Block Wildcards in Roles"
  type: "rbac"
  enforces:
  - "Prevent use of wildcards in RBAC roles"
  remediation:
  - "Replace wildcards '*' with specific resources or actions"
  - "Review role permissions for security risks"
  implementation:
  - "Validate roles and clusterRoles do not contain wildcards"
  exemptions:
    excludedNamespaces: []
    whitelistedRoles: []
  labelSelector:
    matchLabels: {}

eksblockdefaultnamespaceeffect:
  cisBenchmark: "5.3.2"
  title: "Block Default Namespace Usage"
  type: "namespace"
  enforces:
  - "Prevent resource creation in the 'default' namespace"
  remediation:
  - "Specify a namespace other than 'default'"
  - "Follow namespace isolation best practices"
  implementation:
  - "Check if resources are created in the 'default' namespace"
  exemptions:
    excludedNamespaces: []
    allowedResources: []
  labelSelector:
    matchLabels: {}
